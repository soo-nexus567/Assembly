     1                                  ;Copyright Info
     2                                  ;  "Assignment 1" is free software: you can redistribute it and/or modify
     3                                  ;  it under the terms of the GNU General Public License as published by
     4                                  ;  the Free Software Foundation, either version 3 of the License, or
     5                                  ;  (at your option) any later version.
     6                                  
     7                                  ;  "Assignment 1" is distributed in the hope that it will be useful,
     8                                  ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
     9                                  ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    10                                  ;  GNU General Public License for more details.
    11                                  
    12                                  ;  You should have received a copy of the GNU General Public License
    13                                  ;  along with this program.  If not, see <https://www.gnu.org/licenses/>.
    14                                  ;Author information
    15                                  ;  Author name: Jonathan Soo
    16                                  ;  Author email: jonathansoo07@csu.fullerton.edu
    17                                  ;  Author section: 240-11
    18                                  ;  Author CWID : 884776980
    19                                  ;Purpose
    20                                  ;  Calculate the third side of a triangle using float-point arthmetic
    21                                  ;  Get input from user and ouput using C functions
    22                                  ;Program information
    23                                  ;  Program name: Assignment 1
    24                                  ;  Copyright (C) <2025> <Jonathan Soo>
    25                                  ;  Programming languages: One modules in C and one module in X86
    26                                  ;  Date program began:     2025-Mar-05
    27                                  ;  Date program completed: 2025-Feb-07
    28                                  ;  Date comments upgraded: 2025-Feb-08
    29                                  ;  Files in this program: geometry.c, triangle.asm, r.sh
    30                                  ;  Status: Complete.  No errors found after extensive testing.
    31                                  ;
    32                                  ;This file
    33                                  ;   File name: triangle.asm
    34                                  ;   Language: X86-64 with Linux Syntax
    35                                  ;   Assemble: nasm -f elf64 triangle.asm -o triangle.o
    36                                  ;   Editor: VS Code
    37                                  ;   Link: gcc -m64 -Wall -fno-pie -no-pie -z noexecstack -o learn.out triangle.o geometry.o -lm 
    38                                  
    39                                  global huron
    40                                      extern printf
    41                                      extern scanf
    42                                      extern fgets
    43                                      extern strlen
    44                                      extern cos
    45                                      extern stdin
    46                                      extern input_array
    47                                  segment .data
    48 00000000 0000000000000000            results dq 0.0
    49 00000008 0000000000000040            constant dq 2.0
    50                                  segment .bss
    51 00000000 <res 00000008>              semi_perimeter resq 1
    52 00000008 <res 00000008>              side_a resq 1
    53 00000010 <res 00000008>              side_b resq 1
    54 00000018 <res 00000008>              side_c resq 1
    55 00000020 <res 00000008>              part_a resq 1
    56 00000028 <res 00000008>              part_b resq 1
    57 00000030 <res 00000008>              part_c resq 1
    58                                  section .text
    59                                      global huron
    60                                  huron:
    61                                      ; Save the base pointer
    62 00000000 55                          push    rbp
    63 00000001 4889E5                      mov     rbp, rsp
    64                                  
    65                                      ; Save the general purpose registers
    66 00000004 53                          push    rbx
    67 00000005 51                          push    rcx
    68 00000006 52                          push    rdx
    69 00000007 56                          push    rsi
    70 00000008 57                          push    rdi
    71 00000009 4150                        push    r8 
    72 0000000B 4151                        push    r9 
    73 0000000D 4152                        push    r10
    74 0000000F 4153                        push    r11
    75 00000011 4154                        push    r12
    76 00000013 4155                        push    r13
    77 00000015 4156                        push    r14
    78 00000017 4157                        push    r15
    79 00000019 9C                          pushf
    80 0000001A 4989FF                      mov r15, rdi
    81 0000001D 4989F6                      mov r14, rsi
    82 00000020 4989CD                      mov r13, rcx
    83                                  
    84 00000023 F2450F1007                  movsd xmm8, [r15]
    85 00000028 F2450F100E                  movsd xmm9, [r14]
    86 0000002D F2450F105500                movsd xmm10, [r13]
    87                                  
    88                                      ; movsd [side_a], xmm8
    89                                      ; movsd [side_b], xmm9
    90                                      ; movsd [side_c], xmm10
    91                                      ; movsd xmm11, [constant]
    92                                      ; addsd xmm8, xmm9
    93                                      ; addsd xmm8, xmm10
    94                                      ; divsd xmm8, xmm11
    95                                      ; movsd [semi_perimeter], xmm8
    96                                  
    97                                      ; movsd xmm12, [semi_perimeter]
    98                                      ; subsd xmm12, xmm8
    99                                  
   100                                      ; movsd xmm13, [semi_perimeter]
   101                                      ; subsd xmm13, xmm9
   102                                  
   103                                      ; movsd xmm14, [semi_perimeter]
   104                                      ; subsd xmm14, xmm10
   105                                  
   106                                      ; movsd xmm15, [semi_perimeter]
   107                                      ; mulsd xmm12, xmm13
   108                                      ; mulsd xmm12, xmm14
   109                                      ; mulsd xmm12, xmm15
   110                                  
   111                                      ; sqrtsd xmm12, xmm12
   112                                      ; movsd qword [results], xmm12
   113                                  
   114                                      ; ; Restore the general purpose registers
   115 00000033 F20F110425-                 movsd qword[results], xmm0
   115 00000038 [00000000]         
   116 0000003C F20F10C0                    movsd xmm0, xmm0
   117 00000040 9D                          popf          
   118 00000041 415F                        pop     r15
   119 00000043 415E                        pop     r14
   120 00000045 415D                        pop     r13
   121 00000047 415C                        pop     r12
   122 00000049 415B                        pop     r11
   123 0000004B 415A                        pop     r10
   124 0000004D 4159                        pop     r9 
   125 0000004F 4158                        pop     r8 
   126 00000051 5F                          pop     rdi
   127 00000052 5E                          pop     rsi
   128 00000053 5A                          pop     rdx
   129 00000054 59                          pop     rcx
   130 00000055 5B                          pop     rbx
   131                                  
   132                                      ; Restore the base pointer
   133 00000056 5D                          pop     rbp
   134 00000057 C3                          ret
