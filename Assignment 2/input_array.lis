     1                                  global input_array
     2                                      extern printf
     3                                      extern scanf
     4                                      extern isfloat
     5                                      extern atof
     6                                      
     7                                   
     8                                  segment .data
     9 00000000 256C6600                    format_string db "%lf", 0
    10 00000004 496E76616C69642049-         prompt_tryagain db "Invalid Input", 10, 0
    10 0000000D 6E7075740A00       
    11                                  
    12                                  segment .bss
    13                                      align 64
    14 00000000 <res 00000340>              storedata resb 832
    15                                  segment .text
    16                                      global input_array
    17                                  input_array:
    18                                   ; Save the base pointer
    19 00000000 55                          push    rbp
    20 00000001 4889E5                      mov     rbp, rsp
    21                                  
    22                                      ; Save the general purpose registers
    23 00000004 53                          push    rbx
    24 00000005 51                          push    rcx
    25 00000006 52                          push    rdx
    26 00000007 56                          push    rsi
    27 00000008 57                          push    rdi
    28 00000009 4150                        push    r8 
    29 0000000B 4151                        push    r9 
    30 0000000D 4152                        push    r10
    31 0000000F 4153                        push    r11
    32 00000011 4154                        push    r12
    33 00000013 4155                        push    r13
    34 00000015 4156                        push    r14
    35 00000017 4157                        push    r15
    36 00000019 9C                          pushf
    37                                  
    38                                  
    39                                      
    40                                  begin:
    41 0000001A B800000000                  mov rax, 0 
    42 0000001F 48BF-                       mov rdi, format_string
    42 00000021 [0000000000000000] 
    43 00000029 4889E6                      mov rsi, rsp
    44 0000002C E8(00000000)                call scanf
    45                                  
    46 00000031 4898                        cdqe
    47 00000033 4883F8FF                    cmp rax, -1
    48 00000037 7447                        je exit
    49                                  
    50 00000039 B800000000                  mov rax, 0
    51 0000003E 4889E7                      mov rdi, rsp
    52 00000041 E8(00000000)                call isfloat
    53 00000046 4883F800                    cmp rax, 0
    54 0000004A 741E                        je tryagain
    55                                  
    56 0000004C B800000000                  mov rax, 0
    57 00000051 4889E7                      mov rdi, rsp
    58 00000054 E8(00000000)                call atof
    59                                  
    60 00000059 F2430F1144FD00              movsd [r13+r15 * 8], xmm0
    61                                      
    62 00000060 49FFC7                      inc r15
    63 00000063 4D39F7                      cmp r15, r14
    64 00000066 7CB2                        jl begin
    65                                  
    66 00000068 EB16                        jmp exit
    67                                  
    68                                  tryagain:
    69 0000006A B800000000                  mov rax, 0
    70 0000006F 48BF-                       mov rdi, prompt_tryagain
    70 00000071 [0400000000000000] 
    71 00000079 E8(00000000)                call printf
    72 0000007E EB9A                        jmp begin
    73                                  
    74                                  exit:
    75 00000080 4881C400040000              add rsp, 1024
    76                                  
    77 00000087 B807000000                  mov rax, 7
    78 0000008C BA00000000                  mov rdx, 0
    79 00000091 0FAE2C25[00000000]          xrstor [storedata]
    80                                  
    81 00000099 4C89F8                      mov rax, r15
    82                                      
    83                                       ; Restore the general purpose registers
    84 0000009C 9D                          popf          
    85 0000009D 415F                        pop     r15
    86 0000009F 415E                        pop     r14
    87 000000A1 415D                        pop     r13
    88 000000A3 415C                        pop     r12
    89 000000A5 415B                        pop     r11
    90 000000A7 415A                        pop     r10
    91 000000A9 4159                        pop     r9 
    92 000000AB 4158                        pop     r8 
    93 000000AD 5F                          pop     rdi
    94 000000AE 5E                          pop     rsi
    95 000000AF 5A                          pop     rdx
    96 000000B0 59                          pop     rcx
    97 000000B1 5B                          pop     rbx
    98                                  
    99                                      ; Restore the base pointer
   100 000000B2 5D                          pop     rbp
   101 000000B3 C3                          ret
