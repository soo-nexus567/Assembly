     1                                  global input_array
     2                                      extern printf
     3                                      extern scanf
     4                                      extern isfloat
     5                                      extern atof
     6                                      
     7                                   
     8                                  segment .data
     9 00000000 257300                      format_string db "%s", 0
    10 00000003 496E76616C69642049-         prompt_tryagain db "Invalid Input", 10, 0
    10 0000000C 6E7075740A00       
    11                                  
    12                                  segment .bss
    13                                      align 64
    14 00000000 <res 340h>                  storedata resb 832
    15                                  segment .text
    16                                      global input_array
    17                                  input_array:
    18                                   ; Save the base pointer
    19 00000000 55                          push    rbp
    20 00000001 4889E5                      mov     rbp, rsp
    21                                  
    22                                      ; Save the general purpose registers
    23 00000004 53                          push    rbx
    24 00000005 51                          push    rcx
    25 00000006 52                          push    rdx
    26 00000007 56                          push    rsi
    27 00000008 57                          push    rdi
    28 00000009 4150                        push    r8 
    29 0000000B 4151                        push    r9 
    30 0000000D 4152                        push    r10
    31 0000000F 4153                        push    r11
    32 00000011 4154                        push    r12
    33 00000013 4155                        push    r13
    34 00000015 4156                        push    r14
    35 00000017 4157                        push    r15
    36 00000019 9C                          pushf
    37                                  
    38                                  
    39                                      ;Prompt the user for their last name
    40 0000001A B807000000                  mov rax, 7
    41 0000001F BA00000000                  mov rdx, 0
    42 00000024 0FAE2425[00000000]          xsave [storedata]
    43                                  
    44 0000002C 4989FD                      mov r13, rdi
    45 0000002F 4989F6                      mov r14, rsi
    46 00000032 41BF00000000                mov r15, 0
    47 00000038 4881EC00040000              sub rsp, 1024
    48                                  begin:
    49 0000003F B800000000                  mov rax, 0 
    50 00000044 48BF-                       mov rdi, format_string
    50 00000046 [0000000000000000] 
    51 0000004E 4889E6                      mov rsi, rsp
    52 00000051 E8(00000000)                call scanf
    53                                  
    54 00000056 4898                        cdqe
    55 00000058 4883F8FF                    cmp rax, -1
    56 0000005C 7447                        je exit
    57                                  
    58 0000005E B800000000                  mov rax, 0
    59 00000063 4889E7                      mov rdi, rsp
    60 00000066 E8(00000000)                call isfloat
    61 0000006B 4883F800                    cmp rax, 0
    62 0000006F 741E                        je tryagain
    63                                  
    64 00000071 B800000000                  mov rax, 0
    65 00000076 4889E7                      mov rdi, rsp
    66 00000079 E8(00000000)                call atof
    67                                  
    68 0000007E F2430F1144FD00              movsd [r13+r15 * 8], xmm0
    69                                      
    70 00000085 49FFC7                      inc r15
    71 00000088 4D39F7                      cmp r15, r14
    72 0000008B 7CB2                        jl begin
    73                                  
    74 0000008D EB16                        jmp exit
    75                                  
    76                                  tryagain:
    77 0000008F B800000000                  mov rax, 0
    78 00000094 48BF-                       mov rdi, prompt_tryagain
    78 00000096 [0300000000000000] 
    79 0000009E E8(00000000)                call printf
    80 000000A3 EB9A                        jmp begin
    81                                  
    82                                  exit:
    83 000000A5 4881C400040000              add rsp, 1024
    84                                  
    85 000000AC B807000000                  mov rax, 7
    86 000000B1 BA00000000                  mov rdx, 0
    87 000000B6 0FAE2C25[00000000]          xrstor [storedata]
    88                                  
    89 000000BE 4C89F8                      mov rax, r15
    90                                      
    91                                       ; Restore the general purpose registers
    92 000000C1 9D                          popf          
    93 000000C2 415F                        pop     r15
    94 000000C4 415E                        pop     r14
    95 000000C6 415D                        pop     r13
    96 000000C8 415C                        pop     r12
    97 000000CA 415B                        pop     r11
    98 000000CC 415A                        pop     r10
    99 000000CE 4159                        pop     r9 
   100 000000D0 4158                        pop     r8 
   101 000000D2 5F                          pop     rdi
   102 000000D3 5E                          pop     rsi
   103 000000D4 5A                          pop     rdx
   104 000000D5 59                          pop     rcx
   105 000000D6 5B                          pop     rbx
   106                                  
   107                                      ; Restore the base pointer
   108 000000D7 5D                          pop     rbp
   109 000000D8 C3                          ret
