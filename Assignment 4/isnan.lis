     1                                  ;****************************************************************************************************************************
     2                                  ;Program name: "Non-deterministic random numbers".  This program takes an input from the user for how many values to create in an array, then generates random numbers into the array and normalizes and sorts them.
     3                                  ; Copyright (C) 2024  Kaitlyn Lee.          *
     4                                  ;                                                                                                                           *
     5                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     6                                  ;version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it will be useful,   *
     7                                  ;but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See   *
     8                                  ;the GNU General Public License for more details A copy of the GNU General Public License v3 is available here:             *
     9                                  ;<https://www.gnu.org/licenses/>.                                                                                           *
    10                                  ;****************************************************************************************************************************
    11                                  
    12                                  
    13                                  
    14                                  
    15                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    16                                  ;Author information
    17                                  ;  Author name: Kaitlyn Lee
    18                                  ;  Author email: kaitlynlee@csu.fullerton.edu
    19                                  ;  CWID: 886374479
    20                                  ;  Class: 240-03 Section 03
    21                                  ;
    22                                  ;Program information
    23                                  ;  Program name: Non-deterministic random numbers
    24                                  ;  Programming languages: Two modules in C++, five in x86, and one in bash
    25                                  ;  Date program began: 2024-Apr-3
    26                                  ;  Date of last update: 2024-Apr-14
    27                                  ;  Files in this program: main.cpp, executive.asm, fill_random_array.asm, normalize_array.asm, isnan.asm, show_array.asm, sort.cpp, r.sh.
    28                                  ;  Testing: Alpha testing completed.  All functions are correct.
    29                                  ;  Status: Ready for release to customers
    30                                  ;
    31                                  ;Purpose
    32                                  ;  This program takes an input from the user for how many values to create in an array, then generates
    33                                  ;  random numbers into the array and normalizes and sorts them.
    34                                  ;
    35                                  ;This file:
    36                                  ;  File name: isnan.asm
    37                                  ;  Language: X86-64
    38                                  ;  Max page width: 124 columns
    39                                  ;  Assemble (standard): nasm -f elf64 -o isnan.o isnan.asm
    40                                  ;  Assemble (debug): nasm -f elf64 -gdwarf -o isnan.o isnan.asm
    41                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    42                                  ;  Prototype of this function: extern bool isnan();
    43                                  ; 
    44                                  ;
    45                                  ;
    46                                  ;
    47                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    48                                  
    49                                  ;declarations
    50                                  
    51                                  global isnan
    52                                  
    53                                  segment .data                 ;Place initialized data here
    54                                  
    55                                  segment .bss      ;Declare pointers to un-initialized space in this segment.
    56                                  
    57                                  segment .text
    58                                  isnan:
    59                                  
    60                                  ;backup GPRs
    61 00000000 55                      push rbp
    62 00000001 4889E5                  mov rbp, rsp
    63 00000004 53                      push rbx
    64 00000005 51                      push rcx
    65 00000006 52                      push rdx
    66 00000007 57                      push rdi
    67 00000008 56                      push rsi
    68 00000009 4150                    push r8
    69 0000000B 4151                    push r9
    70 0000000D 4152                    push r10
    71 0000000F 4153                    push r11
    72 00000011 4154                    push r12
    73 00000013 4155                    push r13
    74 00000015 4156                    push r14
    75 00000017 4157                    push r15
    76 00000019 9C                      pushf
    77                                  
    78                                  ;move our number to a non volatile register to check it
    79 0000001A F2440F10F8              movsd xmm15, xmm0
    80                                  
    81                                  ;check if number is a nan, if it is: jump to nan, if it is not: move a 1 to rax to return that it is not a nan them jump to exit the function
    82 0000001F 66450F2EFF              ucomisd xmm15, xmm15
    83 00000024 7A07                    jp nan
    84 00000026 B801000000              mov rax, 1
    85 0000002B EB05                    jmp exit
    86                                  
    87                                  ;mov a 0 to rax to return that the number is a nan
    88                                  nan:
    89 0000002D B800000000              mov rax, 0  ;this is a nan
    90                                  
    91                                  ;exit the function
    92                                  exit:
    93                                  ;Restore the GPRs
    94 00000032 9D                      popf
    95 00000033 415F                    pop r15
    96 00000035 415E                    pop r14
    97 00000037 415D                    pop r13
    98 00000039 415C                    pop r12
    99 0000003B 415B                    pop r11
   100 0000003D 415A                    pop r10
   101 0000003F 4159                    pop r9
   102 00000041 4158                    pop r8
   103 00000043 5E                      pop rsi
   104 00000044 5F                      pop rdi
   105 00000045 5A                      pop rdx
   106 00000046 59                      pop rcx
   107 00000047 5B                      pop rbx
   108 00000048 5D                      pop rbp   ;Restore rbp to the base of the activation record of the caller program
   109 00000049 C3                      ret
   110                                  ;End of the function isnan ====================================================================
